import java.util.Scanner;

class Main  { 

    static void firstFit(int blockSize[], int m,  
                        int processSize[], int n)  { 

        int allocation[] = new int[n]; 
       for (int i = 0; i < allocation.length; i++) 
            allocation[i] = -1; 
      

        for (int i = 0; i < n; i++) { 
            for (int j = 0; j < m; j++) { 
                if (blockSize[j] >= processSize[i]) { 
                     
                    allocation[i] = j; 
      
                    blockSize[j] -= processSize[i]; 
      
                    break; 
                } 
            } 
        } 
      
        System.out.println("\nProcess No.\tProcess Size\tBlock no."); 
        for (int i = 0; i < n; i++) 
        { 
            System.out.print(" " + (i+1) + "\t\t" +  
                             processSize[i] + "\t\t"); 
            if (allocation[i] != -1) 
                System.out.print(allocation[i] + 1); 
            else
                System.out.print("Not Allocated"); 
            System.out.println(); 
        } 
    } 



public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    String[] blockSizeStr = scanner.nextLine().split(" ");
    String[] processSizeStr = scanner.nextLine().split(" ");
    
    int m = blockSizeStr.length;
    int n = processSizeStr.length;
    
    int[] blockSize = new int[m];
    int[] processSize = new int[n];
    
    for (int i = 0; i < m; i++) {
        blockSize[i] = Integer.parseInt(blockSizeStr[i]);
    }
    
    for (int i = 0; i < n; i++) {
        processSize[i] = Integer.parseInt(processSizeStr[i]);
    }
    
    firstFit(blockSize, m, processSize, n);
    scanner.close(); // Close the scanner when done.
   }
} 
